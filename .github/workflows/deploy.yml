name: Déploiement CI/CD

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Téléchargement du dépôt
        uses: actions/checkout@v3

      - name: Connexion au registre Github
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extraction des informations utiles
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: | 
            type=ref,event=branch 
            type=sha
            type=raw,value=latest

      - name: Construction et envoi de l'image Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    name: Déploiement de l'application sous Terraform
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Téléchargement du dépôt
        uses: actions/checkout@v3

      - name: Connexion à Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Récupération des variables
        run: |
          echo "Vérification AZURE_CREDENTIALS"
          echo "Extraction AZURE_CLIENT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientId')"
          echo "Extraction AZURE_SUBSCRIPTION_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.subscriptionId')"
          echo "Extraction AZURE_TENANT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.tenantId')"

      - name: Assignation des permissions
        run: |
          az role assignment create \
            --assignee $(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientId') \
            --role "Owner" \
            --scope /subscriptions/$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.subscriptionId')

      - name: Paramétrage de Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.8 # Version de Terraform

      - name: Passage de l'image Docker en minuscule
        run: echo "DOCKER_IMAGE=${{ env.REGISTRY }}/$(echo '${{ env.IMAGE_NAME }}' | tr '[:upper:]' '[:lower:]'):latest" >> $GITHUB_ENV

      - name: Initialisation de Terraform
        working-directory: ./infrastructure
        run: terraform init

      - name: Prévisualisation des changements sur Terraform
        working-directory: ./infrastructure
        run: terraform plan -var "docker_image=$DOCKER_IMAGE"

      - name: Application des changements Terraform
        working-directory: ./infrastructure
        run: terraform apply -auto-approve -var "docker_image=$DOCKER_IMAGE"